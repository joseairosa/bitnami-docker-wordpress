#
# AWS Elastic Beanstalk Nginx/PHP-FPM Configuration
#
# @author    José Airosa <me@joseairosa.com>
# @link      https://animegami.co.uk
# @copyright 2016 José Airosa
# @license   MIT License
# @version   1.0
#

server {

  listen 8080;

  server_name animegami.co.uk;
  # server_name staging.animegami.co.uk;

  # set $rewritenotauth N;
  #
  # if ($REQUEST_URI = "/ping.php") {
  #   set $rewritenotauth "${rewritenotauth}P";
  # }
  # if ($http_x_forwarded_for ~* "217.43.50.242") {
  #   set $rewritenotauth "${rewritenotauth}J";
  # }
  # if ($rewritenotauth = N) {
  #   rewrite ^(.*)$ https://$server_name$REQUEST_URI permanent;
  # }

  set $shouldrewrite N;

  if ($http_x_forwarded_proto = "https") {
    set $shouldrewrite "${shouldrewrite}C";
  }
  if ($REQUEST_URI = "/ping.php") {
    set $shouldrewrite "${shouldrewrite}P";
  }
  if ($shouldrewrite = N) {
    rewrite ^(.*)$ https://$server_name$REQUEST_URI permanent;
  }

  root /var/app/current;
  index index.php index.html;
  log_not_found off;
  client_max_body_size 128M;

  # Pagespeed configuration
  pagespeed on;

  pagespeed Statistics on;
  pagespeed StatisticsLogging on;
  pagespeed LogDir /var/log/pagespeed;
  pagespeed AdminPath /pagespeed_admin;

  location ~ ^/pagespeed_admin {
    allow 127.0.0.1;
    allow 217.43.50.242;
    deny all;
  }

  pagespeed Domain animegami.co.uk;
  # pagespeed Domain staging.animegami.co.uk;
  pagespeed Domain https://*.animegami.co.uk;
  pagespeed Domain 127.0.0.1;

  pagespeed MapOriginDomain 127.0.0.1 https://animegami.co.uk;
  # pagespeed MapOriginDomain 127.0.0.1 https://staging.animegami.co.uk;

  pagespeed DownstreamCachePurgeLocationPrefix http://localhost:80;
  pagespeed DownstreamCacheRebeaconingKey "animegamicache1337";

  # Needs to exist and be writable by nginx.  Use tmpfs for best performance.
  pagespeed FileCachePath /var/ngx_pagespeed_cache;

  pagespeed RespectXForwardedProto on;

  pagespeed FetchHttps enable;

  # disable CoreFilters
  pagespeed RewriteLevel PassThrough;

  # make_google_analytics_async
  # https://developers.google.com/speed/docs/mod_pagespeed/filter-make-google-analytics-async
  pagespeed EnableFilters make_google_analytics_async;

  # responsive_images, responsive_images_zoom
  # https://developers.google.com/speed/pagespeed/module/filter-image-responsive
  pagespeed EnableFilters responsive_images;
  pagespeed EnableFilters responsive_images_zoom;
  # defer the loading of images which are not visible to the client
  pagespeed EnableFilters lazyload_images;
  pagespeed LazyloadImagesAfterOnload off;
  pagespeed LazyloadImagesBlankUrl "https://www.gstatic.com/psa/static/1.gif";
  # enable image optimization
  pagespeed EnableFilters rewrite_images;
  pagespeed EnableFilters resize_images;

  # convert_to_webp_animated
  # https://developers.google.com/speed/pagespeed/module/filter-image-optimize#convert_to_webp_animated
  pagespeed EnableFilters convert_to_webp_animated;

  # enable collapse whitespace filter
  pagespeed EnableFilters collapse_whitespace;

  # combine multiple CSS files into one
  pagespeed EnableFilters combine_css;
  pagespeed EnableFilters rewrite_css,sprite_images;
  # flatten CSS files by replacing @import with the imported file
  pagespeed EnableFilters flatten_css_imports;
  pagespeed CssFlattenMaxBytes -1;
  # rewrite CSS to load page-rendering CSS rules first.
  pagespeed EnableFilters prioritize_critical_css;

  # combine multiple JavaScript files into one
  pagespeed EnableFilters combine_javascript;
  # enable JavaScript defer
  pagespeed EnableFilters defer_javascript;
  # enable JavaScript minification
  pagespeed EnableFilters rewrite_javascript;
  pagespeed MaxCombinedJsBytes 300000;
  pagespeed CombineAcrossPaths on;
  pagespeed JsInlineMaxBytes 2048;
  # enable JavaScript library offload
  pagespeed EnableFilters canonicalize_javascript_libraries;

  # remove tags with default attributes
  pagespeed EnableFilters elide_attributes;

  # improve resource cacheability
  pagespeed EnableFilters extend_cache;

  # pre-solve DNS lookup
  pagespeed EnableFilters insert_dns_prefetch;

  pagespeed EnableFilters remove_comments;

  # Ensure requests for pagespeed optimized resources go to the pagespeed handler
  # and no extraneous headers get set.
  location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
    add_header "" "";
  }
  location ~ "^/pagespeed_static/" { }
  location ~ "^/ngx_pagespeed_beacon$" { }

  # Includes
  include global/maintenance.conf;
  include global/restrictions.conf;

  # Proxy requests to Hostmanager server
  location /_hostmanager {
    proxy_pass http://127.0.0.1:8999/;
  }

  include global/wp-rocket.conf;
  include global/wordpress.conf;

  # Cache static files
  location ~* .(jpg|jpeg|gif|png|css|js|ico|xml)$ {
    expires max;
    log_not_found off;
  }

  # Block access to protected extensions and hidden files
  location ~* .(log|md|sql|txt)$ { deny all; }
  location ^~ /.well-known/      { allow all; }
  location ~ /\.                 { deny all; }
}
